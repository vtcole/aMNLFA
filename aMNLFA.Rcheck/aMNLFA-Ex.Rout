
R version 4.0.0 (2020-04-24) -- "Arbor Day"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "aMNLFA"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "aMNLFA-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('aMNLFA')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aMNLFA.final")
> ### * aMNLFA.final
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.final
> ### Title: aMNLFA final model fitting function
> ### Aliases: aMNLFA.final
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.final(ob)
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/round2calibration.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
Warning in grep(myMeasInvar, interceptconstraints$param, ignore.case = TRUE,  :
  argument 'pattern' has length > 1 and only the first element will be used
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for round 3 calibration model (run this manually). 
NOTE: After running  your round 3 calibration, there may be some output from output that cannot be read in properly as a result of recent changes within Mplus. This will lead to errors in subsequent steps. 
As a temporary fix the problem, please delete all output that comes after the 'LOGISTIC REGRESSION ODDS RATIO RESULTS' section after running your round 3 calibration, before proceeding to the next step. 
This message will appear after all subsequent steps.
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.final", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.initial")
> ### * aMNLFA.initial
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.initial
> ### Title: aMNLFA initial model fitting function
> ### Aliases: aMNLFA.initial
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.initial(ob)
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for mean impact model (run this manually)
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for variance impact model (run this manually). If you trim the variance model manually, do not change the new parameter labels (e.g., v2 is still v2 if you drop the v1 parameter).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_1 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_2 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_3 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_4 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_5 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_6 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_7 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_8 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_9 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_10 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_11 (run this manually).
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for measurement invariance model for BIN_12 (run this manually).

NOTE: After running these models, there may be some output from output that cannot be read in properly as a result of recent changes within Mplus. This will lead to errors in subsequent steps. 
As a temporary fix the problem, please delete all output that comes after the 'LOGISTIC REGRESSION ODDS RATIO RESULTS' section after running your round 3 calibration, before proceeding to the next step. 
This message will appear after all subsequent steps.
>  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.initial", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.itemplots")
> ### * aMNLFA.itemplots
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.itemplots
> ### Title: aMNLFA item plotting function
> ### Aliases: aMNLFA.itemplots
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.itemplots(ob)
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for png file with item plots
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.itemplots", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.object")
> ### * aMNLFA.object
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.object
> ### Title: aMNLFA object function
> ### Aliases: aMNLFA.object
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.object", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.sample")
> ### * aMNLFA.sample
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.sample
> ### Title: aMNLFA sampling function
> ### Aliases: aMNLFA.sample
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.sample(ob)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.sample", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.scoreplots")
> ### * aMNLFA.scoreplots
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.scoreplots
> ### Title: aMNLFA score plotting function
> ### Aliases: aMNLFA.scoreplots
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.scoreplots(ob)
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/scoring.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for png file with factor score plots
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for png file with empirical ICC plots
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for merged data file
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.scoreplots", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.scores")
> ### * aMNLFA.scores
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.scores
> ### Title: aMNLFA score generating function
> ### Aliases: aMNLFA.scores
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>  
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.scores(ob)
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/round3calibration.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for scoring model (run this manually).
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.scores", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("aMNLFA.simultaneous")
> ### * aMNLFA.simultaneous
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: aMNLFA.simultaneous
> ### Title: aMNLFA simultaneous model fitting function
> ### Aliases: aMNLFA.simultaneous
> ### Keywords: MNLFA
> 
> ### ** Examples
> 
>  wd <- tempdir()
>  first<-paste0(system.file(package='aMNLFA'),"/examplefiles")
>  the.list <- list.files(first,full.names=TRUE)
>  file.copy(the.list,wd,overwrite=TRUE)
 [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
>    
>  ob <- aMNLFA::aMNLFA.object(dir = wd, 
+  mrdata = xstudy, 
+  indicators = paste0("BIN_", 1:12),
+  catindicators = paste0("BIN_", 1:12), 
+  meanimpact = c("AGE", "GENDER", "STUDY"), 
+  varimpact = c("AGE", "GENDER", "STUDY"), 
+  measinvar = c("AGE", "GENDER", "STUDY"),
+  factors = c("GENDER", "STUDY"),
+  ID = "ID",
+  thresholds = FALSE)
>  
>  aMNLFA.simultaneous(ob)
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/meanimpactscript.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/varimpactscript.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_1.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_2.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_3.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_4.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_5.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_6.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_7.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_8.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_9.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_10.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_11.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_12.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_1.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_2.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_3.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_4.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_5.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_6.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_7.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_8.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_9.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_10.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_11.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
Reading model:  C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/measinvarscript_BIN_12.out 
No PROPORTION OF DATA PRESENT sections found within COVARIANCE COVERAGE OF DATA output.
COMPLETE. Check 'C:\Users\colev\AppData\Local\Temp\Rtmp0c2FRx/working_dir\Rtmpu0a6Uf/' for Mplus inp file for round 2 calibration model (run this manually). 
NOTE: After running  your round 2 calibration, there may be some output from output that cannot be read in properly as a result of recent changes within Mplus. This will lead to errors in subsequent steps. 
As a temporary fix the problem, please delete all output that comes after the 'LOGISTIC REGRESSION ODDS RATIO RESULTS' section after running your round 3 calibration, before proceeding to the next step. 
This message will appear after all subsequent steps.
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("aMNLFA.simultaneous", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  27.38 3.27 43.58 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
